#!/usr/bin/env python3

import rospy
import cv2
from sensor_msgs.msg import Image
from ultralytics import YOLO

bridge = CvBridge()
detection_model = YOLO("/home/shaimaa/catkin_ws/src/perception_stack_pkg/scripts/yolo11n.pt")

def detection_callback(image_msg):
    global bridge

    #extracting info from header
    image_msg_header = image_msg.header
    msg_timestamp = image_msg_header.stamp
    msg_fram_id = image_msg_header.frame_id

    #decoding msg payload back to image
    frame =bridge.imgmsg_to_cv2(image_msg, desired_encoding="bgr8")

    detection_results = detection_model(frame)
    rospy.loginfo(f"Detection is running ! {frame.shape}")

    if __name__=="__main__":
        cam_topic = "/cam_stream"
        node_name = "object_detector_2D"

        rospy.init_node(f"{node_name}")
        rospy.Subscriber(f"{cam_topic}", Image, detection_callback)
        rospy.loginfo(f"{node_name} is created and is subscribing to topic {cam_topic}")
        rospy.spin()
    
